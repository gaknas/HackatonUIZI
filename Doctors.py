import openpyxl
import numpy as np
import random

class doctor:
    def __init__(self, id, abilities, working_rate, graphic_of_work, available_days, is_used):
        self.id = id
        self.abilities = abilities
        self.working_rate = working_rate
        self.graphic_of_work = graphic_of_work
        self.available_days = available_days
        self.amount_of_hours = int(working_rate * 40)
        self.is_used = is_used

    def get_id(self):
        return self.id

    def get_abilities(self):
        return self.abilities

    def get_working_rate(self):
        return self.working_rate

    def get_graphic_of_work(self):
        return self.graphic_of_work

    def get_available_days(self):
        return self.available_days

    def get_amount_of_hours(self):
        return self.amount_of_hours

    def get_is_used(self):
        return self.is_used

    def set_is_used(self, flag):
        self.is_used = flag

    def vivod(self):
        print(str(self.id) + "  " + str(self.abilities) + "  " + str(self.working_rate) + "  " + str(self.graphic_of_work) + "  " + str(self.available_days) + "  " + str(self.amount_of_hours))


#d = doctor(123, ['РГ', 'ФЛГ'], 1,40, [1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])

#нужно записать нормальное описание графика исходя из необходимого числа запросов и тд, допустим мы возьмем обычные два массива, в одном записаны необходимые исследования, в другом их максимальное колличество на человека в смену
#3.25

activities_max_150 = {'Денситометрия' : 210 , 'КТ' : 39 , 'КТ1' : 24 , 'КТ2' : 17 , 'ММГ' : 123 , 'МРТ' : 30 , 'МРТ1' : 23 , 'МРТ2' : 15 , 'РГ' : 123 , 'ФЛГ' : 451 }         #Словарь со всеми исследованиями и их значениями

activities = {'Денситометрия': 140, 'КТ': 26, 'КТ1': 16, 'КТ2': 11, 'ММГ': 82, 'МРТ': 20, 'МРТ1': 15, 'МРТ2': 10, 'РГ': 82, 'ФЛГ': 300}        #Словарь со всеми исследованиями и их значениями



for key in activities_max_150:
    activities[key] = int(activities_max_150[key] / 1.5)
print(activities)

#amount_for_week = {'Денситометрия' : 1436 , 'КТ' : 4631 , 'КТ1' : 532 , 'КТ2' : 793 , 'ММГ' : 13190 , 'МРТ' : 2423 , 'МРТ1' : 943 , 'МРТ2' : 7 , 'РГ' : 51049 , 'ФЛГ' : 31419 }       #2022 15 данные для тестов
amount_for_week = {'Денситометрия' : 1436 , 'КТ' : 5956 , 'КТ1' : 532 , 'КТ2' : 793 , 'ММГ' : 13190 , 'МРТ' : 3373 , 'МРТ1' : 943 , 'МРТ2' : 7 , 'РГ' : 51049 , 'ФЛГ' : 31419 }       #2022 15 данные для тестов

delete_later = [['Врач1', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач2', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач3', ['ММГ'], 1], ['Врач4', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач5', ['МРТ', 'МРТ1', 'МРТ2'], 1], ['Врач6', ['РГ', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач7', ['ММГ'], 0.5], ['Врач8', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач9', ['ММГ'], 1], ['Врач10', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.5], ['Врач11', ['КТ', 'КТ1', 'КТ2'], 1], ['Врач12', ['КТ', 'КТ1', 'КТ2'], 1], ['Врач13', ['РГ', 'КТ', 'КТ1', 'КТ2', 'МРТ', 'МРТ1', 'МРТ2'], 0.5], ['Врач14', ['ММГ'], 1], ['Врач15', ['ММГ'], 1], ['Врач16', ['МРТ', 'МРТ1', 'МРТ2', 'РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач17', ['РГ', 'КТ', 'КТ1', 'КТ2'], 0.5], ['Врач18', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач19', ['РГ'], 1], ['Врач20', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач21', ['МРТ', 'МРТ1', 'МРТ2', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач22', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач23', ['РГ'], 1], ['Врач24', ['МРТ', 'МРТ1', 'МРТ2', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач25', ['РГ', 'ФЛГ'], 1], ['Врач26', ['РГ', 'КТ', 'КТ1', 'КТ2'], 0.75], ['Врач27', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач28', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач29', ['РГ', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач30', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач31', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач32', ['КТ', 'КТ1', 'КТ2'], 1], ['Врач33', ['ММГ'], 0.75], ['Врач34', ['КТ', 'КТ1', 'КТ2', 'МРТ', 'МРТ1', 'МРТ2'], 1], ['Врач35', ['МРТ', 'МРТ1', 'МРТ2'], 1], ['Врач36', ['ММГ'], 1], ['Врач37', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач38', ['МРТ', 'МРТ1', 'МРТ2'], 0.75], ['Врач39', ['РГ', 'КТ', 'КТ1', 'КТ2'], 0.5], ['Врач40', ['РГ', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач41', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач42', ['ММГ'], 1], ['Врач43', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач44', ['КТ', 'КТ1', 'КТ2'], 0.75], ['Врач45', ['РГ', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач46', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач47', ['КТ', 'КТ1', 'КТ2'], 0.5], ['Врач48', ['МРТ', 'МРТ1', 'МРТ2', 'РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач49', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач50', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач51', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач52', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ФЛГ'], 1], ['Врач53', ['РГ', 'КТ', 'КТ1', 'КТ2'], 0.75], ['Врач54', ['ММГ'], 1], ['Врач55', ['КТ', 'КТ1', 'КТ2'], 0.75], ['Врач56', ['МРТ', 'МРТ1', 'МРТ2'], 1], ['Врач57', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач58', ['РГ', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач59', ['КТ', 'КТ1', 'КТ2', 'МРТ', 'МРТ1', 'МРТ2', 'РГ', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач60', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач61', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач62', ['МРТ', 'МРТ1', 'МРТ2'], 0.75], ['Врач63', ['ММГ', 'КТ', 'КТ1', 'КТ2', 'РГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач64', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ФЛГ'], 0.5], ['Врач65', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач66', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'Денситометрия'], 1], ['Врач67', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач68', ['КТ', 'КТ1', 'КТ2', 'РГ'], 1], ['Врач69', ['КТ', 'КТ1', 'КТ2'], 0.75], ['Врач70', ['РГ', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач71', ['КТ', 'КТ1', 'КТ2'], 0.25], ['Врач72', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач73', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач74', ['ММГ'], 0.75], ['Врач75', ['ММГ', 'КТ', 'КТ1', 'КТ2', 'РГ'], 1], ['Врач76', ['КТ', 'КТ1', 'КТ2', 'РГ', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач77', ['МРТ', 'МРТ1', 'МРТ2'], 1], ['Врач78', ['ММГ'], 1], ['Врач79', ['РГ', 'КТ', 'КТ1', 'КТ2'], 0.75], ['Врач80', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач81', ['ММГ', 'КТ', 'КТ1', 'КТ2', 'РГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач82', ['КТ', 'КТ1', 'КТ2'], 1], ['Врач83', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач84', ['КТ', 'КТ1', 'КТ2'], 0.75], ['Врач85', ['КТ', 'КТ1', 'КТ2'], 1], ['Врач86', ['РГ', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач87', ['КТ', 'КТ1', 'КТ2', 'ФЛГ', 'Денситометрия'], 1], ['Врач88', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач89', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач90', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач91', ['КТ', 'КТ1', 'КТ2'], 1], ['Врач92', ['ММГ', 'ФЛГ'], 1], ['Врач93', ['КТ', 'КТ1', 'КТ2', 'МРТ', 'МРТ1', 'МРТ2', 'РГ', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач94', ['ММГ'], 0.75], ['Врач95', ['ММГ'], 0.5], ['Врач96', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач97', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач98', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач99', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач100', ['КТ', 'КТ1', 'КТ2', 'МРТ', 'МРТ1', 'МРТ2'], 1], ['Врач101', ['РГ', 'КТ', 'КТ1', 'КТ2'], 0.5], ['Врач102', ['КТ', 'КТ1', 'КТ2'], 1], ['Врач103', ['КТ', 'КТ1', 'КТ2', 'РГ', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач104', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач105', ['МРТ', 'МРТ1', 'МРТ2'], 1], ['Врач106', ['РГ'], 1], ['Врач107', ['КТ', 'КТ1', 'КТ2'], 1], ['Врач108', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач109', ['МРТ', 'МРТ1', 'МРТ2'], 1], ['Врач110', ['КТ', 'КТ1', 'КТ2'], 1], ['Врач111', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач112', ['РГ', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач113', ['КТ', 'КТ1', 'КТ2', 'РГ', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач114', ['ММГ'], 1], ['Врач115', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач116', ['ММГ'], 0.75], ['Врач117', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач118', ['РГ'], 1], ['Врач119', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.25], ['Врач120', ['ММГ', 'КТ', 'КТ1', 'КТ2', 'РГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач121', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач122', ['РГ', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач123', ['МРТ', 'МРТ1', 'МРТ2', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач124', ['ММГ', 'КТ', 'КТ1', 'КТ2', 'РГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач125', ['КТ', 'КТ1', 'КТ2', 'РГ'], 1], ['Врач126', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач127', ['КТ', 'КТ1', 'КТ2'], 1], ['Врач128', ['КТ', 'КТ1', 'КТ2'], 1], ['Врач129', ['КТ', 'КТ1', 'КТ2', 'РГ'], 1], ['Врач130', ['КТ', 'КТ1', 'КТ2'], 0.75], ['Врач131', ['КТ', 'КТ1', 'КТ2'], 1], ['Врач132', ['РГ', 'КТ', 'КТ1', 'КТ2'], 0.75], ['Врач133', ['РГ', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач134', ['ММГ', 'КТ', 'КТ1', 'КТ2', 'РГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач135', ['МРТ', 'МРТ1', 'МРТ2', 'КТ', 'КТ1', 'КТ2', 'ФЛГ'], 1], ['Врач136', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач137', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач138', ['КТ', 'КТ1', 'КТ2'], 1], ['Врач139', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач140', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач141', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач142', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач143', ['ММГ'], 1], ['Врач144', ['ММГ'], 1], ['Врач145', ['ММГ', 'РГ'], 0.5], ['Врач146', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.1], ['Врач147', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач148', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач149', ['КТ', 'КТ1', 'КТ2'], 0.75], ['Врач150', ['РГ', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач151', ['РГ', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач152', ['КТ', 'КТ1', 'КТ2'], 1], ['Врач153', ['РГ', 'ФЛГ'], 1], ['Врач154', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач155', ['РГ', 'КТ', 'КТ1', 'КТ2'], 0.75], ['Врач156', ['КТ', 'КТ1', 'КТ2'], 0.5], ['Врач157', ['КТ', 'КТ1', 'КТ2', 'РГ'], 1], ['Врач158', ['РГ', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач159', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач160', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач161', ['КТ', 'КТ1', 'КТ2'], 1], ['Врач162', ['КТ', 'КТ1', 'КТ2'], 1], ['Врач163', ['МРТ', 'МРТ1', 'МРТ2'], 0.5], ['Врач164', ['РГ', 'КТ', 'КТ1', 'КТ2'], 0.75], ['Врач165', ['МРТ', 'МРТ1', 'МРТ2'], 1], ['Врач166', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач167', ['РГ', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач168', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач169', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач170', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач171', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'Денситометрия'], 1], ['Врач172', ['КТ', 'КТ1', 'КТ2'], 1], ['Врач173', ['РГ', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач174', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач175', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач176', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач177', ['МРТ', 'МРТ1', 'МРТ2', 'КТ', 'КТ1', 'КТ2', 'РГ', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач178', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач179', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач180', ['РГ'], 1], ['Врач181', ['ММГ', 'РГ', 'ФЛГ'], 1], ['Врач182', ['ММГ', 'КТ', 'КТ1', 'КТ2', 'РГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач183', ['КТ', 'КТ1', 'КТ2'], 0.75], ['Врач184', ['МРТ', 'МРТ1', 'МРТ2', 'ФЛГ'], 0.5], ['Врач185', ['РГ'], 1], ['Врач186', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач187', ['РГ', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач188', ['ММГ'], 0.5], ['Врач189', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач190', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач191', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач192', ['КТ', 'КТ1', 'КТ2'], 1], ['Врач193', ['РГ', 'ФЛГ'], 1], ['Врач194', ['РГ', 'КТ', 'КТ1', 'КТ2'], 0.75], ['Врач195', ['ММГ', 'КТ', 'КТ1', 'КТ2', 'РГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач196', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач197', ['РГ', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач198', ['МРТ', 'МРТ1', 'МРТ2', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач199', ['РГ', 'ФЛГ'], 1], ['Врач200', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач201', ['РГ', 'КТ', 'КТ1', 'КТ2'], 0.75], ['Врач202', ['ММГ', 'РГ'], 1], ['Врач203', ['ММГ', 'КТ', 'КТ1', 'КТ2', 'РГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач204', ['РГ', 'ММГ', 'Денситометрия'], 1], ['Врач205', ['КТ', 'КТ1', 'КТ2'], 1], ['Врач206', ['КТ', 'КТ1', 'КТ2'], 1], ['Врач207', ['КТ', 'КТ1', 'КТ2'], 1], ['Врач208', ['МРТ', 'МРТ1', 'МРТ2'], 1], ['Врач209', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач210', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач211', ['КТ', 'КТ1', 'КТ2'], 1], ['Врач212', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.5], ['Врач213', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач214', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач215', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач216', ['РГ', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач217', ['ММГ', 'КТ', 'КТ1', 'КТ2', 'РГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач218', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ФЛГ', 'Денситометрия'], 1], ['Врач219', ['РГ'], 0.25], ['Врач220', ['ММГ'], 1], ['Врач221', ['КТ', 'КТ1', 'КТ2'], 1], ['Врач222', ['РГ', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач223', ['РГ', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач224', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач225', ['КТ', 'КТ1', 'КТ2'], 1], ['Врач226', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач227', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач228', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач229', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач230', ['РГ', 'КТ', 'КТ1', 'КТ2'], 0.75], ['Врач231', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач232', ['ММГ'], 0.75], ['Врач233', ['ММГ', 'КТ', 'КТ1', 'КТ2', 'РГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач234', ['КТ', 'КТ1', 'КТ2'], 1], ['Врач235', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач236', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач237', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач238', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач239', ['РГ', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач240', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач241', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач242', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач243', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач244', ['ММГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач245', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач246', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач247', ['МРТ', 'МРТ1', 'МРТ2', 'КТ', 'КТ1', 'КТ2', 'РГ', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач248', ['РГ', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач249', ['РГ', 'КТ', 'КТ1', 'КТ2'], 0.75], ['Врач250', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач251', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач252', ['КТ', 'КТ1', 'КТ2', 'МРТ', 'МРТ1', 'МРТ2'], 1], ['Врач253', ['РГ', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач254', ['МРТ', 'МРТ1', 'МРТ2'], 1], ['Врач255', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач256', ['ММГ', 'РГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач257', ['КТ', 'КТ1', 'КТ2'], 1], ['Врач258', ['КТ', 'КТ1', 'КТ2', 'РГ'], 0.75], ['Врач259', ['КТ', 'КТ1', 'КТ2'], 0.5], ['Врач260', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач261', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач262', ['РГ', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач263', ['КТ', 'КТ1', 'КТ2'], 1], ['Врач264', ['МРТ', 'МРТ1', 'МРТ2'], 1], ['Врач265', ['МРТ', 'МРТ1', 'МРТ2'], 1], ['Врач266', ['КТ', 'КТ1', 'КТ2'], 0.75], ['Врач267', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач268', ['КТ', 'КТ1', 'КТ2'], 0.25], ['Врач269', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач270', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.5], ['Врач271', ['КТ', 'КТ1', 'КТ2'], 1], ['Врач272', ['РГ', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач273', ['МРТ', 'МРТ1', 'МРТ2'], 1], ['Врач274', ['МРТ', 'МРТ1', 'МРТ2'], 1], ['Врач275', ['ММГ', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач276', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач277', ['КТ', 'КТ1', 'КТ2'], 0.5], ['Врач278', ['КТ', 'КТ1', 'КТ2'], 0.25], ['Врач279', ['ММГ'], 1], ['Врач280', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач281', ['ММГ', 'КТ', 'КТ1', 'КТ2', 'РГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач282', ['РГ', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач283', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач284', ['РГ', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач285', ['МРТ', 'МРТ1', 'МРТ2'], 1], ['Врач286', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач287', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач288', ['РГ', 'КТ', 'КТ1', 'КТ2'], 0.5], ['Врач289', ['МРТ', 'МРТ1', 'МРТ2'], 0.5], ['Врач290', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач291', ['КТ', 'КТ1', 'КТ2', 'РГ', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач292', ['КТ', 'КТ1', 'КТ2', 'ММГ'], 1], ['Врач293', ['МРТ', 'МРТ1', 'МРТ2', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач294', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач295', ['КТ', 'КТ1', 'КТ2'], 0.75], ['Врач296', ['КТ', 'КТ1', 'КТ2'], 0.75], ['Врач297', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач298', ['РГ', 'КТ', 'КТ1', 'КТ2'], 0.5], ['Врач299', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач300', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач301', ['МРТ', 'МРТ1', 'МРТ2'], 1], ['Врач302', ['ММГ', 'ФЛГ'], 1], ['Врач303', ['ММГ', 'ФЛГ'], 1], ['Врач304', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач305', ['РГ', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач306', ['ММГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач307', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач308', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач309', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач310', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач311', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач312', ['ММГ', 'КТ', 'КТ1', 'КТ2', 'РГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач313', ['КТ', 'КТ1', 'КТ2', 'РГ'], 1], ['Врач314', ['КТ', 'КТ1', 'КТ2', 'РГ', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач315', ['РГ', 'КТ', 'КТ1', 'КТ2', 'РГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач316', ['ММГ'], 1], ['Врач317', ['МРТ', 'МРТ1', 'МРТ2'], 1], ['Врач318', ['РГ', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач319', ['КТ', 'КТ1', 'КТ2'], 0.75], ['Врач320', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач321', ['РГ', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач322', ['МРТ', 'МРТ1', 'МРТ2'], 1], ['Врач323', ['РГ', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач324', ['РГ', 'КТ', 'КТ1', 'КТ2'], 0.75], ['Врач325', ['РГ', 'КТ', 'КТ1', 'КТ2'], 0.75], ['Врач326', ['ММГ', 'РГ'], 0.5], ['Врач327', ['РГ', 'РГ', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач328', ['МРТ', 'МРТ1', 'МРТ2', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач329', ['РГ', 'КТ', 'КТ1', 'КТ2'], 0.1], ['Врач330', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач331', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач332', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'Денситометрия'], 1], ['Врач333', ['ММГ'], 0.75], ['Врач334', ['МРТ', 'МРТ1', 'МРТ2'], 1], ['Врач335', ['РГ', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач336', ['ММГ'], 1], ['Врач337', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач338', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач339', ['КТ', 'КТ1', 'КТ2'], 0.75], ['Врач340', ['КТ', 'КТ1', 'КТ2'], 1], ['Врач341', ['КТ', 'КТ1', 'КТ2', 'МРТ', 'МРТ1', 'МРТ2'], 0.75], ['Врач342', ['КТ', 'КТ1', 'КТ2', 'РГ', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач343', ['ММГ', 'КТ', 'КТ1', 'КТ2', 'РГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач344', ['ММГ'], 1], ['Врач345', ['РГ', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач346', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач347', ['КТ', 'КТ1', 'КТ2'], 0.75], ['Врач348', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач349', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач350', ['РГ', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.75], ['Врач351', ['ММГ', 'ФЛГ'], 1], ['Врач352', ['РГ'], 0.75], ['Врач353', ['ММГ'], 0.75], ['Врач354', ['ММГ'], 0.75], ['Врач355', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач356', ['РГ', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач357', ['КТ', 'КТ1', 'КТ2', 'МРТ', 'МРТ1', 'МРТ2', 'РГ'], 1], ['Врач358', ['КТ', 'КТ1', 'КТ2', 'РГ', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач359', ['КТ', 'КТ1', 'КТ2'], 1], ['Врач360', ['РГ', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач361', ['РГ', 'КТ', 'КТ1', 'КТ2'], 1], ['Врач362', ['КТ', 'КТ1', 'КТ2'], 1], ['Врач363', ['РГ'], 0.75], ['Врач364', ['РГ', 'КТ', 'КТ1', 'КТ2'], 0.75], ['Врач365', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач366', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1], ['Врач367', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 0.5], ['Врач368', ['РГ', 'КТ', 'КТ1', 'КТ2', 'ММГ', 'ФЛГ', 'Денситометрия'], 1]]



file_name = 'doc.xlsx'
norma_hour = 40
norms = [[1,1], [5,2], [2,2]]
day_available = [[[1, 0, 1, 0, 1, 0, 0],[0, 1, 0, 1, 0, 1, 0],[0, 0, 1, 0, 1, 0, 1]], [[1, 1, 1, 1, 1, 0, 0],[0, 0, 1, 1, 1, 1, 1],[1, 1, 0, 0, 1, 1, 1]], [[1, 1, 0, 0, 1, 1, 0],[0, 1, 1, 0, 0, 1, 1],[0, 0, 1, 1, 0, 0, 1]]]

def get_mas_of_doc(file_name):
    all_mas = []
    workbook = openpyxl.load_workbook(file_name)
    worksheet = workbook.active

    for i in range(1, worksheet.max_row):
        a = 0
        all_mas.append([])
        for col in worksheet.iter_cols(0, 4):
            if (col[i].value == None) & (a == 0):
                break

            if a == 0:
                all_mas[i-1].append(col[i].value)
            if a == 1:
                if col[i].value == 'КТ':
                    all_mas[i - 1].append(['КТ'])
                    all_mas[i - 1][1].append('КТ1')
                    all_mas[i - 1][1].append('КТ2')

                elif col[i].value == 'МРТ':
                    all_mas[i - 1].append(['МРТ'])
                    all_mas[i - 1][1].append('МРТ1')
                    all_mas[i - 1][1].append('МРТ2')

                else:
                    all_mas[i - 1].append([col[i].value])

            if (a == 2) & (col[i].value != None) & (col[i].value != '-'):
                tx = col[i].value.split(',')
                for mes in tx:
                    if mes.strip() == 'Денс':
                        all_mas[i - 1][1].append('Денситометрия')
                    elif mes.strip() == 'Денситометрия':
                        all_mas[i - 1][1].append('Денситометрия')
                    elif mes.strip() == 'РГ':
                        all_mas[i - 1][1].append('РГ')
                    elif mes.strip() == 'КТ':
                        all_mas[i - 1][1].append('КТ')
                        all_mas[i - 1][1].append('КТ1')
                        all_mas[i - 1][1].append('КТ2')
                    elif mes.strip() == 'ММГ':
                        all_mas[i - 1][1].append('ММГ')
                    elif mes.strip() == 'ФЛГ':
                        all_mas[i - 1][1].append('ФЛГ')
                    elif mes.strip() == 'МРТ':

                        all_mas[i - 1][1].append('МРТ')
                        all_mas[i - 1][1].append('МРТ1')
                        all_mas[i - 1][1].append('МРТ2')



                #all_mas[i-1][1].append(mod.strip() for mod in col[i].value.split(','))

            if a == 3:
                all_mas[i-1].append(col[i].value)
            a+=1

    for_return = [x for x in all_mas if x != []]
    return for_return

#   При 40 часов неделе - 160 часов (40 часов / 5 дней × 20 дней);
#   при 36-часовой неделе — 144 часа (36 часов / 5 дней × 20 дней); 6,7,8,12 не более 39\40 часов в неделе
#   при 24-часовой неделе — 96 часов (24 часа / 5 дней × 20 дней).

#   Смена максимально 12 часов (по крайней мере из данного графика - так. Однако я так понимаю, можно меньше, но мы будем делать собсно жадный алгоритм, то беж каждому врачу давать максимум времени, пока не закончится все
#   Прописать логику для разных врачей наверное. но как выбирать между разными графиками работы, это вопрос хороший
#
#   то кок рабоатет врач это скорее на усмотрение участников
#
#
#   более 8 часов - 1 час перерыв
#
#   5/2, 8 часов при ставке 1   + 30 min
#   2/2, 10 часов + 1час
#   1/1, 12 часов + 1 час

#   человек может выбрать скоко часов в дкень он хочет рабоать, доп подальность - форс мажор
#
#
#   в указанной таблице - указаны мин 60 проц и в макс 150 проц
#
#   Допустим сделаем жадный алгоритм, как это можно реализовать? хмхмхмххм
#   выбирается врач по 0 элементу его способностей (тип его основной профиль) и работоспособный в этот день, проверяется его ставка, в приоритете ставка 1
#   ставим его в полный день и считаем, сколлько еще надо исследований сделать
#
#   1 уе - это флюрография
#       6335
#       6314
#       6324
# 1 ue - 1,47 min
# предупреждение, что будет использован такой то врач, чтобы перекрыть такое то количество исследованией  в таком то пункте. тип изначально без перехода, но потом можно его рассмотреть
#
#{'Денситометрия': 168, 'КТ': 293, 'КТ1': 0, 'КТ2': 0, 'ММГ': 205, 'МРТ': 42, 'МРТ1': 0, 'МРТ2': 0, 'РГ': 249, 'ФЛГ': 177} - счетчики по способностям врачей
#
#12
#
#
# изменить на занятость по датам, тип менять 1 на 2 в графике, подкорректировать счет по УЕ
#
#
#
#
all_docs = []

#print(get_mas_of_doc(file_name))

schetchik = {'Денситометрия' : 0 , 'КТ' : 0 , 'КТ1' : 0 , 'КТ2' : 0 , 'ММГ' : 0 , 'МРТ' : 0 , 'МРТ1' : 0 , 'МРТ2' : 0 , 'РГ' : 0 , 'ФЛГ' : 0 }
#schetchik = {'Денситометрия' : 0 , 'КТ' : 0 , 'ММГ' : 0 , 'МРТ' : 0 , 'РГ' : 0 , 'ФЛГ' : 0 }


def schet(mas, schetchik):

    for i in mas:
        schetchik[i] +=1

    return schetchik

def creating_all_mas(all_doctors,schetchik, norms, day_availble):
    all_docs = []

    for doc in all_doctors:
        i = random.randint(0,2)
        j = random.randint(0, 2)
        all_docs.append(doctor(doc[0], doc[1], doc[2], norms[i], day_availble[i][j], True))
        #print(doc[0])
        schetchik = schet(doc[1], schetchik)


    return all_docs, schetchik


all_docs, schetchik = creating_all_mas(delete_later,schetchik,norms,day_available)

for i in all_docs:
    i.vivod()

print(schetchik)


schedule = []

def find_min(schetchik):
    min =0

    schetchik_corrected = {}
    for key, value in schetchik.items():
        min += int(value)
        if((key != 'МРТ1') & (key != 'МРТ2') & (key != 'КТ1') & (key != 'КТ2') ):
            schetchik_corrected[key] = value


    for key, value in schetchik_corrected.items():
        if min >= int(value):
            min = int(value)
            min_key = key
    print(schetchik_corrected)
    return min_key

print(find_min(schetchik))


#       Итак, мы смотрим сначала на пункт с минимальным колличеством врачей, например МРТ. Дальше мы стараемся подобрать расписание врачей на неделю так, чтобы чтобы сначала закрыть потребность в мрт, дальше мы идем по следующему минимальному
#       Потенциально, так мы сможем закрыть все потребности по врачам
#Учитывать ли ставку или нет, и просто идти по списку, надо прочекать, но допустим пойдем втупую. => ищем в массиве первого врача с нужной абилкой, берем его расписание, считаем сколько он сделал от необходимого, идем дальше и так далее и так далее
#
#   ПРИ СДАЧЕ РАБОТЫ УТОЧНИТЬ, ЧТО НУЖНО ОПИСАНИЕ ЛОГИКИ ЗАПОЛНЕНИЯ ГРАФИКА РАБОТЫ ВРАЧЕЙ В ЭКСЕЛЕ
#

def find_doctors(all_docs, key):
    mas_of_suitable_doctors = []
    i = 0
    for doc in all_docs:
        if doc.get_is_used():
            if key in doc.get_abilities() :
                mas_of_suitable_doctors.append(i)
        i+=1
    return mas_of_suitable_doctors


def traffic(schedule, schetchik, all_docs, file_name, amount_for_week, activities):

    workbook = openpyxl.load_workbook(file_name)
    worksheet = workbook.active

    #delete_this = {'Денситометрия': 1, 'КТ': 2, 'ММГ': 3, 'МРТ': 4, 'РГ': 5, 'ФЛГ': 6}
    book = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'W', ]

    #min_key = find_min(schetchik)
    flag = 6
    while(flag > 0):
        min_key = find_min(schetchik)
        mas_of_suitable_doctors = find_doctors(all_docs, min_key)


        for i in mas_of_suitable_doctors:
            day = 0

            if amount_for_week[min_key] > 0:
                #print(amount_for_week[min_key])

                all_docs[i].set_is_used(False)
                #print(all_docs[i].get_is_used())
                #day=0

                for col in worksheet.iter_cols(7,13):
                    if amount_for_week[min_key] <= 0:
                        break
                    #print(all_docs[i].get_available_days())

                    if all_docs[i].get_available_days()[day] == 1:
                        strin = str(book[day+7])+str(4*(i+1))
                        #print(strin)
                        worksheet[strin] = str(min_key)
                        #worksheet[str(book[day+7])+str(4*i+1)] = str(all_docs[i].get_id())

                        '''col[4*i].value = str(min_key)
                        col[4*i + 1].value = str(all_docs[i].get_id())'''

                        amount_for_week[min_key] -= activities[min_key]
                        '''print('kekke')
                    else:
                        print('loh')'''

                    day+=1

                schedule.append([all_docs[i].get_id(), all_docs[i].get_available_days()])

            else:
                #print(amount_for_week[min_key])
                break
        flag-=1
        if min_key == 'МРТ':
            wetgawsegh = schetchik.pop(min_key)
            wetgawsegh = schetchik.pop('МРТ1')
            wetgawsegh = schetchik.pop('МРТ2')
        elif min_key == 'КТ':
            wetgawsegh = schetchik.pop(min_key)
            wetgawsegh = schetchik.pop('КТ1')
            wetgawsegh = schetchik.pop('КТ2')
        else:
            wetgawsegh = schetchik.pop(min_key)
        print('schetchik')
        print(schetchik)

        print(min_key)
        print(mas_of_suitable_doctors)

    print(amount_for_week)
    workbook.save('test.xlsx')


    return schedule

print(traffic([],schetchik, all_docs, file_name, amount_for_week,activities))

#(self, id, abilities, working_rate, amount_of_hours, graphic_of_work, available_days):
































